var define;
/*! @algolia/ui-components-horizontal-slider-vdom 1.0.0 | MIT License | Â© Algolia, Inc. and contributors | https://github.com/algolia/ui-components*/
!(function (e, t) {
  "object" == typeof exports && "undefined" != typeof module ? t(exports) : "function" == typeof define && define.amd ? define(["exports"], t) : t((e = "undefined" != typeof globalThis ? globalThis : e || self)["@algolia/ui-components-horizontal-slider-vdom"] = {});
})(this, function (e) {
  "use strict";
  function t(e, t, n) {
    return ((t in e) ? Object.defineProperty(e, t, {
      value: n,
      enumerable: !0,
      configurable: !0,
      writable: !0
    }) : e[t] = n, e);
  }
  function n(e, t) {
    var n = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
      var r = Object.getOwnPropertySymbols(e);
      (t && (r = r.filter(function (t) {
        return Object.getOwnPropertyDescriptor(e, t).enumerable;
      })), n.push.apply(n, r));
    }
    return n;
  }
  var r = 0;
  function i() {
    for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++) t[n] = arguments[n];
    return t.filter(Boolean).join(" ");
  }
  (e.createHorizontalSliderComponent = function (e) {
    var r = e.createElement;
    return function (e) {
      var o, l = e.listRef, a = e.nextButtonRef, u = e.previousButtonRef, c = e.sliderIdRef, s = e.updateNavigationButtonsProps, f = (function (e) {
        for (var r = 1; r < arguments.length; r++) {
          var i = null != arguments[r] ? arguments[r] : {};
          r % 2 ? n(Object(i), !0).forEach(function (n) {
            t(e, n, i[n]);
          }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(i)) : n(Object(i)).forEach(function (t) {
            Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(i, t));
          });
        }
        return e;
      })({
        sliderLabel: "Items",
        nextButtonLabel: "Next",
        nextButtonTitle: "Next",
        previousButtonLabel: "Previous",
        previousButtonTitle: "Previous"
      }, e.translations), d = null !== (o = e.classNames) && void 0 !== o ? o : {};
      function p() {
        l.current && (l.current.scrollLeft -= .75 * l.current.offsetWidth);
      }
      function v() {
        l.current && (l.current.scrollLeft += .75 * l.current.offsetWidth);
      }
      return 0 === e.items.length ? null : r("div", {
        className: i("uic-HorizontalSlider-container", d.root)
      }, r("button", {
        ref: u,
        title: f.previousButtonTitle,
        "aria-label": f.previousButtonLabel,
        "aria-controls": c.current,
        className: i("uic-HorizontalSlider-navigation", "uic-HorizontalSlider-navigation--previous", d.navigation, d.navigationPrevious),
        onClick: function (e) {
          (e.preventDefault(), p());
        }
      }, r("svg", {
        width: "8",
        height: "16",
        viewBox: "0 0 8 16",
        fill: "none"
      }, r("path", {
        fillRule: "evenodd",
        clipRule: "evenodd",
        d: "M7.13809 0.744078C7.39844 1.06951 7.39844 1.59715 7.13809 1.92259L2.27616 8L7.13809 14.0774C7.39844 14.4028 7.39844 14.9305 7.13809 15.2559C6.87774 15.5814 6.45563 15.5814 6.19528 15.2559L0.861949 8.58926C0.6016 8.26382 0.6016 7.73618 0.861949 7.41074L6.19528 0.744078C6.45563 0.418641 6.87774 0.418641 7.13809 0.744078Z",
        fill: "currentColor"
      }))), r("ol", {
        className: i("uic-HorizontalSlider-list", d.list),
        ref: l,
        tabIndex: 0,
        id: c.current,
        "aria-roledescription": "carousel",
        "aria-label": f.sliderLabel,
        "aria-live": "polite",
        onScroll: s,
        onKeyDown: function (e) {
          "ArrowLeft" === e.key ? (e.preventDefault(), p()) : "ArrowRight" === e.key && (e.preventDefault(), v());
        }
      }, e.items.map(function (t, n) {
        return r("li", {
          key: t.objectID,
          className: i("uic-HorizontalSlider-item", d.item),
          "aria-roledescription": "slide",
          "aria-label": ("").concat(n + 1, " of ").concat(e.items.length)
        }, r(e.itemComponent, {
          item: t
        }));
      })), r("button", {
        ref: a,
        title: f.nextButtonTitle,
        "aria-label": f.nextButtonLabel,
        "aria-controls": c.current,
        className: i("uic-HorizontalSlider-navigation", "uic-HorizontalSlider-navigation--next", d.navigation, d.navigationNext),
        onClick: function (e) {
          (e.preventDefault(), v());
        }
      }, r("svg", {
        width: "8",
        height: "16",
        viewBox: "0 0 8 16",
        fill: "none"
      }, r("path", {
        fillRule: "evenodd",
        clipRule: "evenodd",
        d: "M0.861908 15.2559C0.601559 14.9305 0.601559 14.4028 0.861908 14.0774L5.72384 8L0.861908 1.92259C0.601559 1.59715 0.601559 1.06952 0.861908 0.744079C1.12226 0.418642 1.54437 0.418642 1.80472 0.744079L7.13805 7.41074C7.3984 7.73618 7.3984 8.26382 7.13805 8.58926L1.80472 15.2559C1.54437 15.5814 1.12226 15.5814 0.861908 15.2559Z",
        fill: "currentColor"
      }))));
    };
  }, e.generateHorizontalSliderId = function () {
    return ("uic-horizontal-slider-").concat(r++);
  }, e.updateNavigationButtonsProps = function (e) {
    var t = e.listRef, n = e.nextButtonRef, r = e.previousButtonRef;
    t.current && r.current && n.current && (r.current.hidden = t.current.scrollLeft <= 0, n.current.hidden = t.current.scrollLeft + t.current.clientWidth >= t.current.scrollWidth);
  }, Object.defineProperty(e, "__esModule", {
    value: !0
  }));
});
